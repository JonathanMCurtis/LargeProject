{"version":3,"sources":["components/PageTitle.js","components/Login.js","pages/LoginPage.js","components/LoggedInName.js","components/CardUI.js","pages/CardPage.js","components/RecipeUI.js","pages/ApiRecipeTest.js","App.js","serviceWorker.js","index.js"],"names":["PageTitle","id","Login","loginName","loginPassword","useState","message","setMessage","doLogin","event","a","preventDefault","js","value","fetch","method","body","headers","response","JSON","text","res","parse","user","firstName","lastName","localStorage","setItem","stringify","window","location","href","alert","toString","onSubmit","type","placeholder","ref","c","class","onClick","LoginPage","LoggedInName","_ud","getItem","ud","removeItem","CardUI","card","search","userId","searchResults","setResults","cardList","setCardList","addCard","txt","error","length","searchCard","_results","results","resultText","i","className","CardPage","RecipeUI","name","ingredients","steps","recipeOut","getID","recipeList","setRecipeList","getResults","setGetResults","recipeGet","setRecipeGet","addRecipe","searchRecipe","getRecipe","source","ApiRecipeTest","App","path","exact","to","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"4PAQeA,MANf,WACC,OACC,wBAAIC,GAAK,SAAT,6B,8BCsDaC,MAxDf,WACC,IAAIC,EACAC,EAFY,EAIcC,mBAAS,IAJvB,mBAITC,EAJS,KAIAC,EAJA,KAMVC,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACfD,EAAME,iBAEFC,EAAK,aACGT,EAAUU,MACV,iBACAT,EAAcS,MAAQ,KANnB,kBASSC,MAAM,kDAC5B,CAAEC,OAAQ,OAAQC,KAAMJ,EAAIK,QAAS,CAAE,eAAgB,sBAV1C,cASRC,EATQ,YAYJC,KAZI,SAYaD,EAASE,OAZtB,oBAYVC,EAZU,KAYCC,MAZD,iBAcNrB,IAAM,EACbM,EAAW,wCAGPgB,EAAO,CAAEC,UAAWH,EAAIG,UAAWC,SAAUJ,EAAII,SAAUxB,GAAIoB,EAAIpB,IAEvEyB,aAAaC,QAAQ,YAAaR,KAAKS,UAAUL,IAEjDhB,EAAW,IACXsB,OAAOC,SAASC,KAAO,UAvBV,yDA2BdC,MAAM,KAAEC,YA3BM,6EAAH,sDAiCb,OACC,yBAAKhC,GAAK,YACT,0BAAMiC,SAAa1B,GAClB,0BAAMP,GAAK,eAAX,iBAA6C,6BAC7C,2BAAOkC,KAAO,OAAOlC,GAAK,YAAYmC,YAAc,WACnDC,IAAQ,SAACC,GAAD,OAAOnC,EAAYmC,KAC5B,2BAAOH,KAAO,WAAWlC,GAAK,gBAAgBmC,YAAc,WAC3DC,IAAQ,SAACC,GAAD,OAAOlC,EAAgBkC,KAEhC,2BAAOH,KAAO,SAASlC,GAAK,cAAcsC,MAAQ,UAAU1B,MAAQ,QACnE2B,QAAYhC,KAEd,0BAAMP,GAAK,eAAgBK,KCvCfmC,EATG,WACjB,OACC,6BACC,kBAAC,EAAD,MACA,kBAAC,EAAD,QCgBYC,MAvBf,WACC,IAAIC,EAAMjB,aAAakB,QAAQ,aAE3BC,EAAK1B,KAAKG,MAAMqB,GAChBnB,EAAYqB,EAAGrB,UACfC,EAAWoB,EAAGpB,SASlB,OACC,yBAAKxB,GAAK,eACT,0BAAMA,GAAK,YAAX,gBAAqCuB,EAArC,IAAmDC,GAAiB,6BACpE,4BAAQU,KAAO,SAASlC,GAAK,eAAesC,MAAQ,UACnDC,QAXc,SAAA/B,GAChBA,EAAME,iBAENe,aAAaoB,WAAW,aACxBjB,OAAOC,SAASC,KAAO,MAMtB,eCmEYgB,MApFf,WACC,IAAIC,EAAO,GACPC,EAAS,GACTN,EAAMjB,aAAakB,QAAQ,aAE3BM,EADK/B,KAAKG,MAAMqB,GACJ1C,GALC,EAOaI,mBAAS,IAPtB,mBAOVC,EAPU,KAODC,EAPC,OAQmBF,mBAAS,IAR5B,mBAQV8C,EARU,KAQKC,EARL,OASe/C,mBAAS,IATxB,mBASVgD,EATU,KASAC,EATA,KAWXC,EAAO,uCAAG,WAAM9C,GAAN,qBAAAC,EAAA,6DACfD,EAAME,iBAEFC,EAAK,cAAgBsC,EAAS,aAAeF,EAAKnC,MAAQ,KAH/C,kBAMSC,MAAM,oDAC5B,CAAEC,OAAQ,OAAQC,KAAMJ,EAAIK,QAAS,CAAE,eAAgB,sBAP1C,cAMRC,EANQ,gBASEA,EAASE,OATX,OASVoC,EATU,QAUVnC,EAAMF,KAAKG,MAAMkC,IAEbC,MAAMC,OAAS,EACtBnD,EAAW,aAAec,EAAIoC,OAG9BlD,EAAW,uBAhBE,kDAmBdA,EAAW,KAAE0B,YAnBC,0DAAH,sDAuBP0B,EAAU,uCAAG,WAAMlD,GAAN,2BAAAC,EAAA,6DAClBD,EAAME,iBAEFC,EAAK,cAAgBsC,EAAS,eAAiBD,EAAOpC,MAAQ,KAHhD,kBAMMC,MAAM,wDAC5B,CAAEC,OAAQ,OAAQC,KAAMJ,EAAIK,QAAS,CAAE,eAAgB,sBAPvC,cAMXC,EANW,gBASDA,EAASE,OATR,OAcjB,IALIoC,EATa,OAUbnC,EAAMF,KAAKG,MAAMkC,GACjBI,EAAWvC,EAAIwC,QACfC,EAAa,GAERC,EAAI,EAAGA,EAAIH,EAASF,OAAQK,IACpCD,GAAcF,EAASG,GACnBA,EAAIH,EAASF,OAAS,IACzBI,GAAc,MAEhBV,EAAW,+BACXE,EAAYQ,GApBK,kDAuBjB9B,MAAM,KAAEC,YACRmB,EAAW,KAAEnB,YAxBI,0DAAH,sDA4BhB,OACC,yBAAKhC,GAAK,aACT,6BACA,2BAAOkC,KAAO,OAAOlC,GAAK,aAAamC,YAAc,qBACpDC,IAAQ,SAACC,GAAD,OAAOW,EAASX,KACzB,4BAAQH,KAAO,SAASlC,GAAK,mBAAmB+D,UAAY,UAC3DxB,QAAYmB,GADb,gBAGA,6BACA,0BAAM1D,GAAK,oBAAqBkD,GAChC,uBAAGlD,GAAK,YAAaoD,GAAc,6BAAM,6BACzC,2BAAOlB,KAAO,OAAOlC,GAAK,WAAWmC,YAAc,cAClDC,IAAQ,SAACC,GAAD,OAAOU,EAAOV,KACvB,4BAAQH,KAAO,SAASlC,GAAK,gBAAgB+D,UAAY,UACxDxB,QAAYe,GADb,aAGA,6BACA,0BAAMtD,GAAK,iBAAkBK,KChEjB2D,EAXE,WAChB,OACC,6BACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCyHYC,MAlIf,WACC,IAAIC,EAAO,GACPC,EAAc,GACdC,EAAQ,GAERC,EACO,GAMPrB,EAAS,GACTsB,EAAQ,GAbO,EAeWlE,mBAAS,IAfpB,mBAeZC,EAfY,KAeHC,EAfG,OAgBiBF,mBAAS,IAhB1B,mBAgBZ8C,EAhBY,KAgBGC,EAhBH,OAiBiB/C,mBAAS,IAjB1B,mBAiBZmE,EAjBY,KAiBAC,EAjBA,OAkBiBpE,mBAAS,IAlB1B,mBAkBZqE,EAlBY,KAkBAC,EAlBA,OAmBetE,mBAAS,IAnBxB,mBAmBZuE,EAnBY,KAmBDC,EAnBC,KAqBbC,EAAS,uCAAG,WAAMrE,GAAN,qBAAAC,EAAA,6DACjBD,EAAME,iBAEFC,EAAK,kBAAoBuD,EAAKtD,MAAQ,0BAA4BuD,EAAYvD,MAC7E,oBAAsBwD,EAAMxD,MAAQ,KAJxB,kBAOOC,MAAM,0BAC5B,CAAEC,OAAQ,OAAQC,KAAMJ,EAAIK,QAAS,CAAE,eAAgB,sBARxC,cAOVC,EAPU,gBAUAA,EAASE,OAVT,OAUZoC,EAVY,QAWZnC,EAAMF,KAAKG,MAAMkC,IAEbC,MAAMC,OAAS,EACtBnD,EAAW,aAAec,EAAIoC,OAG9BlD,EAAW+D,GAjBI,kDAoBhB/D,EAAW,KAAE0B,YApBG,0DAAH,sDAwBT8C,EAAY,uCAAG,WAAMtE,GAAN,2BAAAC,EAAA,6DACpBD,EAAME,iBAEFC,EAAK,cAAgBqC,EAAOpC,MAAQ,KAHpB,kBAMIC,MAAM,6BAC5B,CAAEC,OAAQ,OAAQC,KAAMJ,EAAIK,QAAS,CAAE,eAAgB,sBAPrC,cAMbC,EANa,gBASHA,EAASE,OATN,OAcnB,IALIoC,EATe,OAUfnC,EAAMF,KAAKG,MAAMkC,GACjBI,EAAWvC,EAAIwC,QACfC,EAAa,GAERC,EAAI,EAAGA,EAAIH,EAASF,OAAQK,IACpCD,GAAcF,EAASG,GACnBA,EAAIH,EAASF,OAAS,IACzBI,GAAc,MAEhBV,EAAW,iCACXqB,EAAcX,GApBK,kDAuBnB9B,MAAM,KAAEC,YACRmB,EAAW,KAAEnB,YAxBM,0DAAH,sDA4BZ+C,EAAS,uCAAG,WAAMvE,GAAN,qBAAAC,EAAA,6DACjBD,EAAME,iBAIFC,EAAK,gBAAkB2D,EAAM1D,MAAQ,KALxB,kBAQOC,MAAM,0BAC5B,CAAEC,OAAQ,OAAQC,KAAMJ,EAAIK,QAAS,CAAE,eAAgB,sBATxC,cAQVC,EARU,gBAWAA,EAASE,OAXT,OAWZoC,EAXY,OAYZnC,EAAMF,KAAKG,MAAMkC,GACPnC,EAAI4D,OAElBJ,EAAarB,GAfG,kDAkBhBxB,MAAM,KAAEC,YACR0C,EAAc,KAAE1C,YAnBA,0DAAH,sDAuBf,OACC,yBAAKhC,GAAK,aACT,6BACA,2BAAOkC,KAAO,OAAOlC,GAAK,aAAamC,YAAc,qBACpDC,IAAQ,SAACC,GAAD,OAAOW,EAASX,KACzB,4BAAQH,KAAO,SAASlC,GAAK,mBAAmB+D,UAAY,UAC3DxB,QAAYuC,GADb,kBAGA,6BACA,0BAAM9E,GAAK,uBAAwBkD,GACnC,uBAAGlD,GAAK,cAAeuE,GAAgB,6BAAM,6BAC7C,2BAAOrC,KAAO,OAAOlC,GAAK,WAAWmC,YAAc,YAC/CC,IAAQ,SAACC,GAAD,OAAOiC,EAAQjC,KAC3B,4BAAQH,KAAO,SAASlC,GAAK,mBAAmB+D,UAAY,UAC3DxB,QAAYwC,GADb,eAGA,6BACA,0BAAM/E,GAAK,oBAAqByE,GAChC,uBAAGzE,GAAK,cAAe2E,GAAe,6BAAM,6BAC5C,2BAAOzC,KAAO,OAAOlC,GAAK,aAAamC,YAAc,OACpDC,IAAQ,SAACC,GAAD,OAAO6B,EAAO7B,KACvB,2BAAOH,KAAO,OAAOlC,GAAK,oBAAoBmC,YAAc,cACxDC,IAAQ,SAACC,GAAD,OAAO8B,EAAc9B,KACjC,2BAAOH,KAAO,OAAOlC,GAAK,cAAcmC,YAAc,QAClDC,IAAQ,SAACC,GAAD,OAAO+B,EAAQ/B,KAC3B,4BAAQH,KAAO,SAASlC,GAAK,kBAAkB+D,UAAY,UAC1DxB,QAAYsC,GADb,eAGA,6BACA,0BAAM7E,GAAK,mBAAoBK,KChHnB4E,EAVO,WACrB,OACC,6BACC,kBAAC,EAAD,MACA,kBAAC,EAAD,QCkBYC,MAnBf,WACC,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAO,IAAIC,OAAK,GACtB,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOD,KAAO,SAASC,OAAK,GAC3B,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOD,KAAO,cAAcC,OAAK,GAChC,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAUC,GAAK,SCHCC,QACU,cAA7B1D,OAAOC,SAAS0D,UAEa,UAA7B3D,OAAOC,SAAS0D,UAEhB3D,OAAOC,SAAS0D,SAASC,MACxB,2DClBFC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SD2IpB,kBAAmBC,WACtBA,UAAUC,cAAcC,MACtBC,MAAK,SAAAC,GACLA,EAAaC,gBAEbC,OAAM,SAAA5C,GACN6C,QAAQ7C,MAAMA,EAAMnD,c","file":"static/js/main.26889052.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction PageTitle() {\r\n\treturn (\r\n\t\t<h1 id = \"title\">COP 4331 MERN Stack Demo</h1>\r\n\t);\r\n}\r\n\r\nexport default PageTitle;","import React, { useState } from 'react';\r\n\r\nfunction Login() {\r\n\tlet loginName;\r\n\tlet loginPassword;\r\n\r\n\tconst [message, setMessage] = useState('');\r\n\r\n\tconst doLogin = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet js = '{\"login\":\"'\r\n            + loginName.value\r\n            + '\",\"password\":\"'\r\n            + loginPassword.value + '\"}';\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://largeproject-21.herokuapp.com/api/login',\r\n\t\t\t\t{ method: 'POST', body: js, headers: { 'Content-Type': 'application/json' } });\r\n\r\n\t\t\tlet res = JSON.parse(await response.text());\r\n\r\n\t\t\tif (res.id <= 0) {\r\n\t\t\t\tsetMessage('User/Password combination incorrect');\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet user = { firstName: res.firstName, lastName: res.lastName, id: res.id };\r\n\r\n\t\t\t\tlocalStorage.setItem('user_data', JSON.stringify(user));\r\n\r\n\t\t\t\tsetMessage('');\r\n\t\t\t\twindow.location.href = '/cards';\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\talert(e.toString());\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id = \"loginDiv\">\r\n\t\t\t<form onSubmit = { doLogin }>\r\n\t\t\t\t<span id = \"inner-title\">PLEASE LOG IN</span><br />\r\n\t\t\t\t<input type = \"text\" id = \"loginName\" placeholder = \"Username\"\r\n\t\t\t\t\tref = { (c) => loginName = c } />\r\n\t\t\t\t<input type = \"password\" id = \"loginPassword\" placeholder = \"Password\"\r\n\t\t\t\t\tref = { (c) => loginPassword = c } />\r\n\r\n\t\t\t\t<input type = \"submit\" id = \"loginButton\" class = \"buttons\" value = \"Do It\"\r\n\t\t\t\t\tonClick = { doLogin } />\r\n\t\t\t</form>\r\n\t\t\t<span id = \"loginResult\">{ message }</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nimport PageTitle from '../components/PageTitle';\r\nimport Login from '../components/Login';\r\n\r\nconst LoginPage = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<PageTitle />\r\n\t\t\t<Login />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nfunction LoggedInName() {\r\n\tlet _ud = localStorage.getItem('user_data');\r\n\r\n\tlet ud = JSON.parse(_ud);\r\n\tlet firstName = ud.firstName;\r\n\tlet lastName = ud.lastName;\r\n\r\n\tconst doLogout = event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlocalStorage.removeItem('user_data');\r\n\t\twindow.location.href = '/';\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id = \"loggedInDiv\">\r\n\t\t\t<span id = \"userName\">Logged In As { firstName } { lastName }</span><br />\r\n\t\t\t<button type = \"button\" id = \"logoutButton\" class = \"buttons\"\r\n\t\t\t\tonClick = { doLogout }> Log Out </button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LoggedInName;","import React, { useState } from 'react';\r\n\r\nfunction CardUI() {\r\n\tlet card = '';\r\n\tlet search = '';\r\n\tlet _ud = localStorage.getItem('user_data');\r\n\tlet ud = JSON.parse(_ud);\r\n\tlet userId = ud.id;\r\n\r\n\tconst [message, setMessage] = useState('');\r\n\tconst [searchResults, setResults] = useState('');\r\n\tconst [cardList, setCardList] = useState('');\r\n\r\n\tconst addCard = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet js = '{\"userId\":\"' + userId + '\",\"card\":\"' + card.value + '\"}';\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://largeproject-21.herokuapp.com/api/addcard',\r\n\t\t\t\t{ method: 'POST', body: js, headers: { 'Content-Type': 'application/json' } });\r\n\r\n\t\t\tlet txt = await response.text();\r\n\t\t\tlet res = JSON.parse(txt);\r\n\r\n\t\t\tif (res.error.length > 0)\r\n\t\t\t\tsetMessage('API Error:' + res.error);\r\n\r\n\t\t\telse\r\n\t\t\t\tsetMessage('Card has been added');\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tsetMessage(e.toString());\r\n\t\t}\r\n\t};\r\n\r\n\tconst searchCard = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet js = '{\"userId\":\"' + userId + '\",\"search\":\"' + search.value + '\"}';\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('https://largeproject-21.herokuapp.com/api/searchcards',\r\n\t\t\t\t{ method: 'POST', body: js, headers: { 'Content-Type': 'application/json' } });\r\n\r\n\t\t\tlet txt = await response.text();\r\n\t\t\tlet res = JSON.parse(txt);\r\n\t\t\tlet _results = res.results;\r\n\t\t\tlet resultText = '';\r\n\r\n\t\t\tfor (let i = 0; i < _results.length; i++) {\r\n\t\t\t\tresultText += _results[i];\r\n\t\t\t\tif (i < _results.length - 1)\r\n\t\t\t\t\tresultText += ', ';\r\n\t\t\t}\r\n\t\t\tsetResults('Card(s) have been retrieved');\r\n\t\t\tsetCardList(resultText);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\talert(e.toString());\r\n\t\t\tsetResults(e.toString());\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id = \"cardUIDiv\">\r\n\t\t\t<br />\r\n\t\t\t<input type = \"text\" id = \"searchText\" placeholder = \"Card To Search For\"\r\n\t\t\t\tref = { (c) => search = c } />\r\n\t\t\t<button type = \"button\" id = \"searchCardButton\" className = \"buttons\"\r\n\t\t\t\tonClick = { searchCard }> Search Card\r\n\t\t\t</button>\r\n\t\t\t<br />\r\n\t\t\t<span id = \"cardSearchResult\">{ searchResults }</span>\r\n\t\t\t<p id = \"cardList\">{ cardList }</p><br /><br />\r\n\t\t\t<input type = \"text\" id = \"cardText\" placeholder = \"Card To Add\"\r\n\t\t\t\tref = { (c) => card = c } />\r\n\t\t\t<button type = \"button\" id = \"addCardButton\" className = \"buttons\"\r\n\t\t\t\tonClick = { addCard }> Add Card\r\n\t\t\t</button>\r\n\t\t\t<br />\r\n\t\t\t<span id = \"cardAddResult\">{ message }</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardUI;","import React from 'react';\r\n\r\nimport PageTitle from '../components/PageTitle';\r\nimport LoggedInName from '../components/LoggedInName';\r\nimport CardUI from '../components/CardUI';\r\n\r\nconst CardPage = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<PageTitle />\r\n\t\t\t<LoggedInName />\r\n\t\t\t<CardUI />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n//\r\nexport default CardPage;","import React, { useState } from 'react';\r\n\r\nfunction RecipeUI() {\r\n\tlet name = '';\r\n\tlet ingredients = '';\r\n\tlet steps = '';\r\n\r\n\tlet recipeOut = {\r\n\t\trecipeID: '',\r\n\t\trecipeName: '',\r\n\t\trecipeIngredients: '',\r\n\t\trecipeSteps: '',\r\n\t\trecipeDate: ''\r\n\t};\r\n\tlet search = '';\r\n\tlet getID = '';\r\n\r\n\tconst [message, setMessage] = useState('');\r\n\tconst [searchResults, setResults] = useState('');\r\n\tconst [recipeList, setRecipeList] = useState('');\r\n\tconst [getResults, setGetResults] = useState('');\r\n\tconst [recipeGet, setRecipeGet] = useState('');\r\n\r\n\tconst addRecipe = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet js = '{\"recipeName\":\"' + name.value + '\",\"recipeIngredients\":\"' + ingredients.value\r\n\t\t\t\t\t+ '\",\"recipeSteps\":\"' + steps.value + '\"}';\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('./api/recipes/addRecipe',\r\n\t\t\t\t{ method: 'POST', body: js, headers: { 'Content-Type': 'application/json' } });\r\n\r\n\t\t\tlet txt = await response.text();\r\n\t\t\tlet res = JSON.parse(txt);\r\n\r\n\t\t\tif (res.error.length > 0)\r\n\t\t\t\tsetMessage('API Error:' + res.error);\r\n\r\n\t\t\telse\r\n\t\t\t\tsetMessage(recipeOut.recipeID);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tsetMessage(e.toString());\r\n\t\t}\r\n\t};\r\n\r\n\tconst searchRecipe = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet js = '{\"search\":\"' + search.value + '\"}';\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('./api/recipes/searchByName',\r\n\t\t\t\t{ method: 'POST', body: js, headers: { 'Content-Type': 'application/json' } });\r\n\r\n\t\t\tlet txt = await response.text();\r\n\t\t\tlet res = JSON.parse(txt);\r\n\t\t\tlet _results = res.results;\r\n\t\t\tlet resultText = '';\r\n\r\n\t\t\tfor (let i = 0; i < _results.length; i++) {\r\n\t\t\t\tresultText += _results[i];\r\n\t\t\t\tif (i < _results.length - 1)\r\n\t\t\t\t\tresultText += ', ';\r\n\t\t\t}\r\n\t\t\tsetResults('Recipe(s) have been retrieved');\r\n\t\t\tsetRecipeList(resultText);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\talert(e.toString());\r\n\t\t\tsetResults(e.toString());\r\n\t\t}\r\n\t};\r\n\r\n\tconst getRecipe = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// let js = '{\"userId\":\"' + userId + '\",\"recipeID\":\"' + getID.value + '\"}';\r\n\r\n\t\tlet js = '{\"recipeID\":\"' + getID.value + '\"}';\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch('./api/recipes/getRecipe',\r\n\t\t\t\t{ method: 'POST', body: js, headers: { 'Content-Type': 'application/json' } });\r\n\r\n\t\t\tlet txt = await response.text();\r\n\t\t\tlet res = JSON.parse(txt);\r\n\t\t\tlet _result = res.source;\r\n\r\n\t\t\tsetRecipeGet(txt);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\talert(e.toString());\r\n\t\t\tsetGetResults(e.toString());\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id = \"cardUIDiv\">\r\n\t\t\t<br />\r\n\t\t\t<input type = \"text\" id = \"searchName\" placeholder = \"Name To Search For\"\r\n\t\t\t\tref = { (c) => search = c } />\r\n\t\t\t<button type = \"button\" id = \"searchNameButton\" className = \"buttons\"\r\n\t\t\t\tonClick = { searchRecipe }> Search Recipe\r\n\t\t\t</button>\r\n\t\t\t<br />\r\n\t\t\t<span id = \"recipeSearchResults\">{ searchResults }</span>\r\n\t\t\t<p id = \"recipeList\">{ recipeList }</p><br /><br />\r\n\t\t\t<input type = \"text\" id = \"searchID\" placeholder = \"ID To Get\"\r\n\t\t\t\t   ref = { (c) => getID = c } />\r\n\t\t\t<button type = \"button\" id = \"searchNameButton\" className = \"buttons\"\r\n\t\t\t\tonClick = { getRecipe }> Get Recipe\r\n\t\t\t</button>\r\n\t\t\t<br />\r\n\t\t\t<span id = \"recipeGetResults\">{ getResults }</span>\r\n\t\t\t<p id = \"recipeList\">{ recipeGet }</p><br /><br />\r\n\t\t\t<input type = \"text\" id = \"recipeName\" placeholder = \"Name\"\r\n\t\t\t\tref = { (c) => name = c } />\r\n\t\t\t<input type = \"text\" id = \"recipeIngredients\" placeholder = \"Ingredients\"\r\n\t\t\t\t   ref = { (c) => ingredients = c } />\r\n\t\t\t<input type = \"text\" id = \"recipeSteps\" placeholder = \"Steps\"\r\n\t\t\t\t   ref = { (c) => steps = c } />\r\n\t\t\t<button type = \"button\" id = \"addRecipeButton\" className = \"buttons\"\r\n\t\t\t\tonClick = { addRecipe }> Add Recipe\r\n\t\t\t</button>\r\n\t\t\t<br />\r\n\t\t\t<span id = \"recipeAddResult\">{ message }</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default RecipeUI;","import React from 'react';\r\n\r\nimport PageTitle from '../components/PageTitle';\r\nimport RecipeUI from '../components/RecipeUI';\r\n\r\nconst ApiRecipeTest = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<PageTitle />\r\n\t\t\t<RecipeUI />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n//\r\nexport default ApiRecipeTest;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport LoginPage from './pages/LoginPage';\r\nimport CardPage from './pages/CardPage';\r\nimport ApiRecipeTest from './pages/ApiRecipeTest';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Router >\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path = \"/\" exact>\r\n\t\t\t\t\t<LoginPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path = \"/cards\" exact>\r\n\t\t\t\t\t<CardPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path = \"/recipeTest\" exact>\r\n\t\t\t\t\t<ApiRecipeTest />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Redirect to = \"/\" />\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;","/*\r\n * This optional code is used to register a service worker.\r\n * register() is not called by default.\r\n */\r\n\r\n/*\r\n * This lets the app load faster on subsequent visits in production, and gives\r\n * it offline capabilities. However, it also means that developers (and users)\r\n * will only see deployed updates on subsequent visits to a page, after all the\r\n * existing tabs open on the page have been closed, since previously cached\r\n * resources are updated in the background.\r\n */\r\n\r\n/*\r\n * To learn more about the benefits of this model and instructions on how to\r\n * opt-in, read https://bit.ly/CRA-PWA\r\n */\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === '[::1]' ||\r\n\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t/*\r\n\t\t\t * Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t * from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t * serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\t */\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t * service worker/PWA documentation.\r\n\t\t\t\t */\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\r\n\t\t\t\tif (installingWorker == null)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t * At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t * but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t * content until all client tabs are closed.\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate)\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t * At this point, everything has been precached.\r\n\t\t\t\t\t\t\t * It's the perfect time to display a\r\n\t\t\t\t\t\t\t * \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess)\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' }\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then(registration => {\r\n\t\t\t\tregistration.unregister();\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(error.message);\r\n\t\t\t});\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n/*\r\n * If you want your app to work offline and load faster, you can change\r\n * unregister() to register() below. Note this comes with some pitfalls.\r\n * Learn more about service workers: https://bit.ly/CRA-PWA\r\n */\r\nserviceWorker.unregister();"],"sourceRoot":""}